swagger: '2.0'
info:
  version: "1.0.2"
    title: "Bank Scaling"
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8091
basePath: "/"
tags:
  - name: account-controller
    description: Account Controller
  - name: user-api-controller
    description: User API Controller
paths:
  "/api/v1/account":
    get:
      tags:
        - account-controller
      summary: getAllAccounts
      operationId: getAllAccountsUsingGET
      produces:
        - "*/*"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Account"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/v1/account/delete/{accountId}":
    delete:
      tags:
        - account-controller
      summary: deleteAccount
      operationId: deleteAccountUsingDELETE
      produces:
        - "*/*"
      parameters:
        - name: accountId
          in: path
          description: accountId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  "/api/v1/account/transfer/{from}/{to}":
    put:
      tags:
        - account-controller
      summary: transferBalance
      operationId: transferBalanceUsingPUT
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: from
          in: path
          description: from
          required: true
          type: integer
          format: int64
        - name: to
          in: path
          description: to
          required: true
          type: integer
          format: int64
        - name: value
          in: query
          description: value
          required: true
          type: number
          format: double
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - jwtAuth: []
      deprecated: false
  "/api/v1/account/{accountId}":
    get:
      tags:
        - account-controller
      summary: getAccount
      operationId: getAccountUsingGET
      produces:
        - "*/*"
      parameters:
        - name: accountId
          in: path
          description: accountId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Account"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/v1/user":
    get:
      tags:
        - user-api-controller
      summary: searchUsers
      operationId: searchUsersUsingGET
      produces:
        - "*/*"
      parameters:
        - name: dateOfBirth
          in: query
          description: dateOfBirth
          required: true
          type: string
          format: date-time
        - name: email
          in: query
          description: email
          required: true
          type: string
        - name: name
          in: query
          description: name
          required: true
          type: string
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: phone
          in: query
          description: phone
          required: true
          type: integer
          format: int64
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 30
          format: int32
        - name: sort
          in: query
          description: sort
          required: false
          type: string
          default: name
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Page«User»"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/v1/user/register":
    post:
      tags:
        - user-api-controller
      summary: createUser
      operationId: createUserUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            "$ref": "#/definitions/User"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/User"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/v1/user/{userId}":
    get:
      tags:
        - user-api-controller
      summary: getById
      operationId: getByIdUsingGET
      produces:
        - "*/*"
      parameters:
        - name: userId
          in: path
          description: userId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/User"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/v1/user/{userId}/email":
    post:
      tags:
        - user-api-controller
      summary: addEmail
      operationId: addEmailUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: author
          in: query
          description: author
          required: true
          type: integer
          format: int64
        - in: body
          name: email
          description: email
          required: true
          schema:
            "$ref": "#/definitions/EmailData"
        - name: userId
          in: path
          description: userId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/EmailData"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/v1/user/{userId}/phone":
    get:
      tags:
        - user-api-controller
      summary: fetch
      operationId: fetchUsingGET
      produces:
        - "*/*"
      parameters:
        - name: userId
          in: path
          description: userId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/PhoneData"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/v1/user/{userId}/update":
    put:
      tags:
        - user-api-controller
      summary: updateUser
      operationId: updateUserUsingPUT
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            "$ref": "#/definitions/User"
        - name: userId
          in: path
          description: userId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - jwtAuth: []
      deprecated: false
definitions:
  Account:
    type: object
    properties:
      balance:
        type: number
        format: double
      id:
        type: integer
        format: int64
      user:
        "$ref": "#/definitions/User"
    title: Account
  EmailData:
    type: object
    properties:
      email:
        type: string
      id:
        type: integer
        format: int64
      lastModified:
        type: string
        format: date-time
      user:
        "$ref": "#/definitions/User"
    title: EmailData
  Pageable:
    type: object
    properties:
      offset:
        type: integer
        format: int64
      pageNumber:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      paged:
        type: boolean
      sort:
        "$ref": "#/definitions/Sort"
      unpaged:
        type: boolean
    title: Pageable
  Page«User»:
    type: object
    properties:
      content:
        type: array
        items:
          "$ref": "#/definitions/User"
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        "$ref": "#/definitions/Pageable"
      size:
        type: integer
        format: int32
      sort:
        "$ref": "#/definitions/Sort"
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: Page«User»
  PhoneData:
    type: object
    properties:
      id:
        type: integer
        format: int64
      phone:
        type: string
      user:
        "$ref": "#/definitions/User"
    title: PhoneData
  Sort:
    type: object
    properties:
      empty:
        type: boolean
      sorted:
        type: boolean
      unsorted:
        type: boolean
    title: Sort
  User:
    type: object
    properties:
      account:
        "$ref": "#/definitions/Account"
      date_of_birth:
        type: string
        format: date-time
      email:
        type: array
        items:
          "$ref": "#/definitions/EmailData"
      emails:
        type: array
        items:
          "$ref": "#/definitions/EmailData"
      id:
        type: integer
        format: int64
      name:
        type: string
      password:
        type: string
      phone:
        type: array
        items:
          "$ref": "#/definitions/PhoneData"
      phones:
        type: array
        items:
          "$ref": "#/definitions/PhoneData"
      username:
        type: string
    title: User
